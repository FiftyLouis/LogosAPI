ЪG
IC:\Users\lbo\source\repos\LogosAPI\LogosAPI\Controllers\AuthController.cs
	namespace

 	
LogosAPI


 
.

 
Controllers

 
{ 
[ 
Route 

(
 
$str &
)& '
]' (
[ 
ApiController 
] 
public 

class 
AuthController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 

ApiContext #
_context$ ,
;, -
public 
AuthController 
( 
IConfiguration ,
configuration- :
,: ;

ApiContext< F
contextG N
)N O
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 
_context 
= 
context #
;# $
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
User' +
>+ ,
>, -
Register. 6
(6 7
UserDto7 >
request? F
)F G
{ 	
CreatePasswordHash 
( 
request &
.& '
Password' /
,/ 0
out1 4
byte5 9
[9 :
]: ;
passwordHash< H
,H I
outJ M
byteN R
[R S
]S T
passwordSaltU a
)a b
;b c
User 
user 
= 
new 
User  
(  !
)! "
;" #
foreach 
( 
var 
u 
in 
_context %
.% &
Users& +
)+ ,
{   
if!! 
(!! 
u!! 
.!! 
UserName!! 
.!! 
Equals!! %
(!!% &
request!!& -
.!!- .
UserName!!. 6
)!!6 7
)!!7 8
{!!9 :
return"" 

BadRequest"" %
(""% &
$str""& C
)""C D
;""D E
}## 
}$$ 
user%% 
.%% 
UserName%% 
=%% 
request%% #
.%%# $
UserName%%$ ,
;%%, -
user&& 
.&& 
PasswordSalt&& 
=&& 
passwordSalt&&  ,
;&&, -
user'' 
.'' 
PasswordHash'' 
='' 
passwordHash''  ,
;'', -
_context(( 
.(( 
Add(( 
((( 
user(( 
)(( 
;(( 
_context** 
.** 
SaveChanges**  
(**  !
)**! "
;**" #
return-- 
Ok-- 
(-- 
user-- 
)-- 
;-- 
}.. 	
[00 	
HttpPost00	 
(00 
$str00 
)00 
]00 
public11 
async11 
Task11 
<11 
ActionResult11 &
<11& '
User11' +
>11+ ,
>11, -
Login11. 3
(113 4
UserDto114 ;
request11< C
)11C D
{22 	
foreach44 
(44 
var44 
user44 
in44 
_context44  (
.44( )
Users44) .
)44. /
{55 
if66 
(66 
user66 
.66 
UserName66 !
.66! "
Equals66" (
(66( )
request66) 0
.660 1
UserName661 9
)669 :
)66: ;
{77 
if88 
(88 
VerifyPasswordHash88 *
(88* +
request88+ 2
.882 3
Password883 ;
,88; <
user88= A
.88A B
PasswordHash88B N
,88N O
user88P T
.88T U
PasswordSalt88U a
)88a b
)88b c
{99 
string:: 
token:: $
=::% &
CreateToken::' 2
(::2 3
user::3 7
)::7 8
;::8 9
return;; 
Ok;; !
(;;! "
token;;" '
);;' (
;;;( )
}<< 
return== 

BadRequest== %
(==% &
$str==& 4
)==4 5
;==5 6
}>> 
}?? 
return@@ 

BadRequest@@ 
(@@ 
$str@@ /
)@@/ 0
;@@0 1
}AA 	
privateCC 
stringCC 
CreateTokenCC "
(CC" #
UserCC# '
userCC( ,
)CC, -
{DD 	
ListEE 
<EE 
ClaimEE 
>EE 
claimsEE 
=EE  
newEE! $
ListEE% )
<EE) *
ClaimEE* /
>EE/ 0
{FF 
newGG 
ClaimGG 
(GG 

ClaimTypesGG $
.GG$ %
NameGG% )
,GG) *
userGG+ /
.GG/ 0
UserNameGG0 8
)GG8 9
}HH 
;HH 
varJJ 
keyJJ 
=JJ 
newJJ  
SymmetricSecurityKeyJJ .
(JJ. /
SystemJJ/ 5
.JJ5 6
TextJJ6 :
.JJ: ;
EncodingJJ; C
.JJC D
UTF8JJD H
.JJH I
GetBytesJJI Q
(JJQ R
configurationJJR _
.JJ_ `

GetSectionJJ` j
(JJj k
$strJJk ~
)JJ~ 
.	JJ А
Value
JJА Е
)
JJЕ Ж
)
JJЖ З
;
JJЗ И
varLL 
credsLL 
=LL 
newLL 
SigningCredentialsLL .
(LL. /
keyLL/ 2
,LL2 3
SecurityAlgorithmsLL4 F
.LLF G
HmacSha512SignatureLLG Z
)LLZ [
;LL[ \
varNN 
tokenNN 
=NN 
newNN 
JwtSecurityTokenNN ,
(NN, -
claimsOO 
:OO 
claimsOO 
,OO 
expiresPP 
:PP 
DateTimePP !
.PP! "
NowPP" %
.PP% &
AddDaysPP& -
(PP- .
$numPP. /
)PP/ 0
,PP0 1
signingCredentialsQQ "
:QQ" #
credsQQ$ )
)RR 
;RR 
varTT 
jwtTT 
=TT 
newTT #
JwtSecurityTokenHandlerTT 1
(TT1 2
)TT2 3
.TT3 4

WriteTokenTT4 >
(TT> ?
tokenTT? D
)TTD E
;TTE F
returnWW 
jwtWW 
;WW 
}XX 	
privateZZ 
voidZZ 
CreatePasswordHashZZ '
(ZZ' (
stringZZ( .
passwordZZ/ 7
,ZZ7 8
outZZ9 <
byteZZ= A
[ZZA B
]ZZB C
passwordHashZZD P
,ZZP Q
outZZR U
byteZZV Z
[ZZZ [
]ZZ[ \
passwordSaltZZ] i
)ZZi j
{[[ 	
using\\ 
(\\ 
var\\ 
hmac\\ 
=\\ 
new\\ !

HMACSHA512\\" ,
(\\, -
)\\- .
)\\. /
{]] 
passwordSalt^^ 
=^^ 
hmac^^ #
.^^# $
Key^^$ '
;^^' (
passwordHash__ 
=__ 
hmac__ #
.__# $
ComputeHash__$ /
(__/ 0
System__0 6
.__6 7
Text__7 ;
.__; <
Encoding__< D
.__D E
UTF8__E I
.__I J
GetBytes__J R
(__R S
password__S [
)__[ \
)__\ ]
;__] ^
}`` 
}aa 	
privatecc 
boolcc 
VerifyPasswordHashcc '
(cc' (
stringcc( .
passwordcc/ 7
,cc7 8
bytecc9 =
[cc= >
]cc> ?
passwordHashcc@ L
,ccL M
byteccN R
[ccR S
]ccS T
passwordSaltccU a
)cca b
{dd 	
usingee 
(ee 
varee 
hmacee 
=ee 
newee  

HMACSHA512ee! +
(ee+ ,
passwordSaltee, 8
)ee8 9
)ee9 :
{ff 
vargg 
computedhashgg !
=gg" #
hmacgg$ (
.gg( )
ComputeHashgg) 4
(gg4 5
Systemgg5 ;
.gg; <
Textgg< @
.gg@ A
EncodingggA I
.ggI J
UTF8ggJ N
.ggN O
GetBytesggO W
(ggW X
passwordggX `
)gg` a
)gga b
;ggb c
returnhh 
computedhashhh #
.hh# $
SequenceEqualhh$ 1
(hh1 2
passwordHashhh2 >
)hh> ?
;hh? @
}ii 
}jj 	
}kk 
}ll вп
JC:\Users\lbo\source\repos\LogosAPI\LogosAPI\Controllers\LogosController.cs
	namespace 	
LogosAPI
 
. 
Controllers 
{ 
[ 
Route 

(
 
$str &
)& '
]' (
[		 
ApiController		 
]		 
[

 
	Authorize

 
]

 
public 

class 
LogosController  
:! "
ControllerBase# 1
{ 
private 
readonly 

ApiContext #
_context$ ,
;, -
public 
LogosController 
( 

ApiContext )
context* 1
)1 2
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpPost	 
, 
AllowAnonymous !
]! "
public 

JsonResult 
CreateEditIssues *
(* +
Issues+ 1
issues2 8
)8 9
{ 	
if 
( 
issues 
. 
id 
== 
$num 
) 
{ 
_context 
. 
Issues 
.  
Add  #
(# $
issues$ *
)* +
;+ ,
} 
else 
{ 
var 

issuesInDb 
=  
_context! )
.) *
Issues* 0
.0 1
Find1 5
(5 6
issues6 <
.< =
id= ?
)? @
;@ A
if 
( 

issuesInDb 
== !
null" &
)& '
return 
new 

JsonResult )
() *
NotFound* 2
(2 3
)3 4
)4 5
;5 6

issuesInDb   
=   
issues   #
;  # $
}!! 
_context## 
.## 
SaveChanges##  
(##  !
)##! "
;##" #
return%% 
new%% 

JsonResult%% !
(%%! "
Ok%%" $
(%%$ %
issues%%% +
)%%+ ,
)%%, -
;%%- .
}&& 	
[)) 	
HttpGet))	 
])) 
public** 

JsonResult** 
	GetIssues** #
(**# $
int**$ '
id**( *
)*** +
{++ 	
var,, 
issues,, 
=,, 
_context,, !
.,,! "
Issues,," (
.,,( )
Find,,) -
(,,- .
id,,. 0
),,0 1
;,,1 2
if.. 
(.. 
issues.. 
==.. 
null.. 
).. 
return// 
new// 

JsonResult// %
(//% &
NotFound//& .
(//. /
)/// 0
)//0 1
;//1 2
return11 
new11 

JsonResult11 !
(11! "
Ok11" $
(11$ %
issues11% +
)11+ ,
)11, -
;11- .
}22 	
[66 	

HttpDelete66	 
]66 
public77 

JsonResult77 
DeleteIssues77 &
(77& '
int77' *
id77+ -
)77- .
{88 	
var99 
issue99 
=99 
_context99  
.99  !
Issues99! '
.99' (
Find99( ,
(99, -
id99- /
)99/ 0
;990 1
if;; 
(;; 
issue;; 
==;; 
null;; 
);; 
return<< 
new<< 

JsonResult<< %
(<<% &
NotFound<<& .
(<<. /
)<</ 0
)<<0 1
;<<1 2
_context>> 
.>> 
Issues>> 
.>> 
Remove>> "
(>>" #
issue>># (
)>>( )
;>>) *
_context@@ 
.@@ 
SaveChanges@@  
(@@  !
)@@! "
;@@" #
returnBB 
newBB 

JsonResultBB !
(BB! "
OkBB" $
(BB$ %
issueBB% *
)BB* +
)BB+ ,
;BB, -
}CC 	
[FF 	
HttpGetFF	 
(FF 
$strFF  
)FF  !
]FF! "
publicGG 

JsonResultGG 
GetAllIssuesGG &
(GG& '
)GG' (
{HH 	
varII 
issuesII 
=II 
_contextII !
.II! "
IssuesII" (
.II( )
ToListII) /
(II/ 0
)II0 1
;II1 2
returnKK 
newKK 

JsonResultKK !
(KK! "
issuesKK" (
)KK( )
;KK) *
}LL 	
[OO 	
HttpPostOO	 
,OO 
AllowAnonymousOO !
]OO! "
publicPP 

JsonResultPP !
CreateEditMaintenancePP /
(PP/ 0
PlannedMaintenancePP0 B
pmPPC E
)PPE F
{QQ 	
ifRR 
(RR 
pmRR 
.RR 
idRR 
==RR 
$numRR 
)RR 
{SS 
_contextTT 
.TT 
PlannedMaintenanceTT +
.TT+ ,
AddTT, /
(TT/ 0
pmTT0 2
)TT2 3
;TT3 4
}UU 
elseVV 
{WW 
varXX 
pmInDbXX 
=XX 
_contextXX %
.XX% &
PlannedMaintenanceXX& 8
.XX8 9
FindXX9 =
(XX= >
pmXX> @
.XX@ A
idXXA C
)XXC D
;XXD E
ifYY 
(YY 
pmInDbYY 
==YY 
nullYY "
)YY" #
returnZZ 
newZZ 

JsonResultZZ )
(ZZ) *
NotFoundZZ* 2
(ZZ2 3
)ZZ3 4
)ZZ4 5
;ZZ5 6
pmInDb[[ 
=[[ 
pm[[ 
;[[ 
}\\ 
_context^^ 
.^^ 
SaveChanges^^  
(^^  !
)^^! "
;^^" #
return`` 
new`` 

JsonResult`` !
(``! "
Ok``" $
(``$ %
pm``% '
)``' (
)``( )
;``) *
}aa 	
[cc 	
HttpGetcc	 
]cc 
publicdd 

JsonResultdd 
GetPmdd 
(dd  
intdd  #
iddd$ &
)dd& '
{ee 	
varff 
pmff 
=ff 
_contextff 
.ff 
PlannedMaintenanceff /
.ff/ 0
Findff0 4
(ff4 5
idff5 7
)ff7 8
;ff8 9
ifhh 
(hh 
pmhh 
==hh 
nullhh 
)hh 
{ii 
returnjj 
newjj 

JsonResultjj %
(jj% &
NotFoundjj& .
(jj. /
)jj/ 0
)jj0 1
;jj1 2
}kk 
returnmm 
newmm 

JsonResultmm !
(mm! "
Okmm" $
(mm$ %
pmmm% '
)mm' (
)mm( )
;mm) *
}nn 	
[pp 	

HttpDeletepp	 
]pp 
publicqq 

JsonResultqq 
DeletePmqq "
(qq" #
intqq# &
idqq' )
)qq) *
{rr 	
varss 
pmss 
=ss 
_contextss 
.ss 
PlannedMaintenancess 0
.ss0 1
Findss1 5
(ss5 6
idss6 8
)ss8 9
;ss9 :
ifuu 
(uu 
pmuu 
==uu 
nulluu 
)uu 
{vv 
returnww 
newww 

JsonResultww %
(ww% &
NotFoundww& .
(ww. /
)ww/ 0
)ww0 1
;ww1 2
}xx 
_contextzz 
.zz 
PlannedMaintenancezz '
.zz' (
Removezz( .
(zz. /
pmzz/ 1
)zz1 2
;zz2 3
_context|| 
.|| 
SaveChanges||  
(||  !
)||! "
;||" #
return~~ 
new~~ 

JsonResult~~ !
(~~! "
Ok~~" $
(~~$ %
pm~~% '
)~~' (
)~~( )
;~~) *
} 	
[
ББ 	
HttpGet
ББ	 
(
ББ 
$str
ББ 
)
ББ 
]
ББ 
public
ВВ 

JsonResult
ВВ 
GetAllPm
ВВ "
(
ВВ" #
)
ВВ# $
{
ГГ 	
var
ДД 
pms
ДД 
=
ДД 
_context
ДД 
.
ДД  
PlannedMaintenance
ДД 1
.
ДД1 2
ToList
ДД2 8
(
ДД8 9
)
ДД9 :
;
ДД: ;
return
ЖЖ 
new
ЖЖ 

JsonResult
ЖЖ !
(
ЖЖ! "
pms
ЖЖ" %
)
ЖЖ% &
;
ЖЖ& '
}
ЗЗ 	
[
ММ 	
HttpGet
ММ	 
(
ММ 
$str
ММ &
)
ММ& '
,
ММ' (
AllowAnonymous
ММ) 7
]
ММ7 8
public
НН 

JsonResult
НН  
GetPmScheduledDate
НН ,
(
НН, -
)
НН- .
{
ОО 	
List
ПП 
<
ПП  
PlannedMaintenance
ПП #
>
ПП# $
pms
ПП% (
=
ПП) *
new
ПП+ .
List
ПП/ 3
<
ПП3 4 
PlannedMaintenance
ПП4 F
>
ППF G
(
ППG H
)
ППH I
;
ППI J
foreach
СС 
(
СС 
var
СС 
pm
СС 
in
СС 
_context
СС '
.
СС' ( 
PlannedMaintenance
СС( :
)
СС: ;
{
ТТ 
int
УУ 
Results
УУ 
=
УУ 
DateTime
УУ %
.
УУ% &
Compare
УУ& -
(
УУ- .
pm
УУ. 0
.
УУ0 1
	scheduled
УУ1 :
,
УУ: ;
DateTime
УУ< D
.
УУD E
Now
УУE H
)
УУH I
;
УУI J
if
ХХ 
(
ХХ 
Results
ХХ 
>
ХХ 
$num
ХХ 
)
ХХ 
pms
ЦЦ 
.
ЦЦ 
Add
ЦЦ 
(
ЦЦ 
pm
ЦЦ 
)
ЦЦ 
;
ЦЦ  
}
ЧЧ 
var
ЩЩ 
	orderByPm
ЩЩ 
=
ЩЩ 
from
ЩЩ  
pm
ЩЩ! #
in
ЩЩ$ &
pms
ЩЩ' *
orderby
ЪЪ #
pm
ЪЪ$ &
.
ЪЪ& '
dateofCreation
ЪЪ' 5
select
ЫЫ "
pm
ЫЫ# %
;
ЫЫ% &
pms
ЭЭ 
=
ЭЭ 
	orderByPm
ЭЭ 
.
ЭЭ 
ToList
ЭЭ "
(
ЭЭ" #
)
ЭЭ# $
;
ЭЭ$ %
return
ЯЯ 
new
ЯЯ 

JsonResult
ЯЯ !
(
ЯЯ! "
pms
ЯЯ" %
)
ЯЯ% &
;
ЯЯ& '
}
†† 	
[
§§ 	
HttpGet
§§	 
(
§§ 
$str
§§ $
)
§§$ %
,
§§% &
AllowAnonymous
§§' 5
]
§§5 6
public
•• 

JsonResult
•• 
GetCurrentIssues
•• *
(
••* +
)
••+ ,
{
¶¶ 	
List
ІІ 
<
ІІ 
Issues
ІІ 
>
ІІ 
issues
ІІ 
=
ІІ  !
new
ІІ" %
List
ІІ& *
<
ІІ* +
Issues
ІІ+ 1
>
ІІ1 2
(
ІІ2 3
)
ІІ3 4
;
ІІ4 5
foreach
©© 
(
©© 
var
©© 
issue
©© 
in
©© !
_context
©©" *
.
©©* +
Issues
©©+ 1
)
©©1 2
{
™™ 
if
ЂЂ 
(
ЂЂ 
issue
ЂЂ 
.
ЂЂ 
Closing
ЂЂ  
==
ЂЂ! #
null
ЂЂ$ (
)
ЂЂ( )
issues
ђђ 
.
ђђ 
Add
ђђ 
(
ђђ 
issue
ђђ $
)
ђђ$ %
;
ђђ% &
}
ЃЃ 
var
∞∞ !
orderByTimeCreation
∞∞ #
=
∞∞$ %
from
∞∞& *
issue
∞∞+ 0
in
∞∞1 3
issues
∞∞4 :
orderby
±±& -
issue
±±. 3
.
±±3 4
Date
±±4 8

descending
±±9 C
select
≤≤& ,
issue
≤≤- 2
;
≤≤2 3
issues
ґґ 
=
ґґ !
orderByTimeCreation
ґґ (
.
ґґ( )
ToList
ґґ) /
(
ґґ/ 0
)
ґґ0 1
;
ґґ1 2
return
ЄЄ 
new
ЄЄ 

JsonResult
ЄЄ !
(
ЄЄ! "
issues
ЄЄ" (
)
ЄЄ( )
;
ЄЄ) *
}
єє 	
[
ЉЉ 	
HttpGet
ЉЉ	 
(
ЉЉ 
$str
ЉЉ '
)
ЉЉ' (
,
ЉЉ( )
AllowAnonymous
ЉЉ* 8
]
ЉЉ8 9
public
љљ 

JsonResult
љљ !
GetHistoricalIssues
љљ -
(
љљ- .
)
љљ. /
{
ЊЊ 	
List
њњ 
<
њњ 
Issues
њњ 
>
њњ 
issues
њњ 
=
њњ  !
new
њњ" %
List
њњ& *
<
њњ* +
Issues
њњ+ 1
>
њњ1 2
(
њњ2 3
)
њњ3 4
;
њњ4 5
foreach
ЅЅ 
(
ЅЅ 
var
ЅЅ 
issue
ЅЅ 
in
ЅЅ !
_context
ЅЅ" *
.
ЅЅ* +
Issues
ЅЅ+ 1
)
ЅЅ1 2
{
¬¬ 
if
√√ 
(
√√ 
issue
√√ 
.
√√ 
Closing
√√ !
!=
√√" $
null
√√% )
)
√√) *
issues
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
issue
ƒƒ $
)
ƒƒ$ %
;
ƒƒ% &
}
∆∆ 
var
»» !
orderByTimeCreation
»» #
=
»»$ %
from
»»& *
issue
»»+ 0
in
»»1 3
issues
»»4 :
orderby
……& -
issue
……. 3
.
……3 4
Date
……4 8

descending
……9 C
select
  & ,
issue
  - 2
;
  2 3
issues
ЌЌ 
=
ЌЌ !
orderByTimeCreation
ЌЌ (
.
ЌЌ( )
ToList
ЌЌ) /
(
ЌЌ/ 0
)
ЌЌ0 1
;
ЌЌ1 2
return
ѕѕ 
new
ѕѕ 

JsonResult
ѕѕ !
(
ѕѕ! "
issues
ѕѕ" (
)
ѕѕ( )
;
ѕѕ) *
}
–– 	
[
’’ 	
HttpGet
’’	 
(
’’ 
$str
’’ )
)
’’) *
]
’’* +
public
÷÷ 

JsonResult
÷÷ #
GetCurrentIssuesAdmin
÷÷ /
(
÷÷/ 0
)
÷÷0 1
{
„„ 	
List
ЎЎ 
<
ЎЎ 
Issues
ЎЎ 
>
ЎЎ 
issues
ЎЎ 
=
ЎЎ  !
new
ЎЎ" %
List
ЎЎ& *
<
ЎЎ* +
Issues
ЎЎ+ 1
>
ЎЎ1 2
(
ЎЎ2 3
)
ЎЎ3 4
;
ЎЎ4 5
foreach
ЏЏ 
(
ЏЏ 
var
ЏЏ 
issue
ЏЏ 
in
ЏЏ !
_context
ЏЏ" *
.
ЏЏ* +
Issues
ЏЏ+ 1
)
ЏЏ1 2
{
џџ 
if
№№ 
(
№№ 
issue
№№ 
.
№№ 
Closing
№№ !
==
№№" $
null
№№% )
)
№№) *
issues
ЁЁ 
.
ЁЁ 
Add
ЁЁ 
(
ЁЁ 
issue
ЁЁ $
)
ЁЁ$ %
;
ЁЁ% &
}
яя 
var
бб !
orderByTimeCreation
бб #
=
бб$ %
from
бб& *
issue
бб+ 0
in
бб1 3
issues
бб4 :
orderby
вв& -
issue
вв. 3
.
вв3 4
Date
вв4 8

descending
вв9 C
select
гг& ,
issue
гг- 2
;
гг2 3
issues
зз 
=
зз !
orderByTimeCreation
зз (
.
зз( )
ToList
зз) /
(
зз/ 0
)
зз0 1
;
зз1 2
return
йй 
new
йй 

JsonResult
йй !
(
йй! "
issues
йй" (
)
йй( )
;
йй) *
}
кк 	
[
лл 	
HttpPost
лл	 
(
лл 
$str
лл  
)
лл  !
]
лл! "
public
мм 

JsonResult
мм 
SolvedIssue
мм %
(
мм% &
int
мм& )
id
мм* ,
,
мм, -
DateTime
мм. 6
date
мм7 ;
)
мм; <
{
нн 	
var
оо 
issue
оо 
=
оо 
_context
оо  
.
оо  !
Issues
оо! '
.
оо' (
Find
оо( ,
(
оо, -
id
оо- /
)
оо/ 0
;
оо0 1
if
рр 
(
рр 
issue
рр 
==
рр 
null
рр 
)
рр 
{
сс 
return
тт 
new
тт 

JsonResult
тт %
(
тт% &
NotFound
тт& .
(
тт. /
)
тт/ 0
)
тт0 1
;
тт1 2
}
уу 
_context
хх 
.
хх 
Issues
хх 
.
хх 
Find
хх  
(
хх  !
id
хх! #
)
хх# $
.
хх$ %
Closing
хх% ,
=
хх- .
DateTime
хх/ 7
.
хх7 8
Now
хх8 ;
;
хх; <
_context
цц 
.
цц 
Issues
цц 
.
цц 
Find
цц  
(
цц  !
id
цц! #
)
цц# $
.
цц$ %
Solving
цц% ,
=
цц- .
date
цц/ 3
;
цц3 4
_context
щщ 
.
щщ 
SaveChanges
щщ  
(
щщ  !
)
щщ! "
;
щщ" #
return
ыы 
new
ыы 

JsonResult
ыы !
(
ыы! "
issue
ыы" '
)
ыы' (
;
ыы( )
}
ээ 	
[
€€ 
HttpPost
€€ 
(
€€ 
$str
€€ 
)
€€ 
]
€€  
public
АА 

JsonResult
АА 
CreateIssue
АА %
(
АА% &
string
АА& ,
AffectedSolutions
АА- >
,
АА> ?
string
АА@ F
Text
ААG K
,
ААK L
DateTime
ААM U
ETA
ААV Y
)
ААY Z
{
ББ 	
Issues
ВВ 
issue
ВВ 
=
ВВ 
new
ВВ 
Issues
ВВ %
(
ВВ% &
AffectedSolutions
ВВ& 7
,
ВВ7 8
Text
ВВ9 =
,
ВВ= >
ETA
ВВ? B
)
ВВB C
;
ВВC D
CreateEditIssues
ГГ 
(
ГГ 
issue
ГГ "
)
ГГ" #
;
ГГ# $
return
ЕЕ 
new
ЕЕ 

JsonResult
ЕЕ !
(
ЕЕ! "
issue
ЕЕ" '
)
ЕЕ' (
;
ЕЕ( )
}
ЖЖ 	
[
КК 	
HttpGet
КК	 
(
КК 
$str
КК 
)
КК 
]
КК  
public
ЛЛ 

JsonResult
ЛЛ 

GetPmAdmin
ЛЛ $
(
ЛЛ$ %
)
ЛЛ% &
{
ММ 	
List
НН 
<
НН  
PlannedMaintenance
НН #
>
НН# $
pms
НН% (
=
НН) *
new
НН+ .
List
НН/ 3
<
НН3 4 
PlannedMaintenance
НН4 F
>
ННF G
(
ННG H
)
ННH I
;
ННI J
foreach
ПП 
(
ПП 
var
ПП 
pm
ПП 
in
ПП 
_context
ПП '
.
ПП' ( 
PlannedMaintenance
ПП( :
)
ПП: ;
{
РР 
int
СС 
Results
СС 
=
СС 
DateTime
СС &
.
СС& '
Compare
СС' .
(
СС. /
pm
СС/ 1
.
СС1 2
	scheduled
СС2 ;
,
СС; <
DateTime
СС= E
.
ССE F
Now
ССF I
)
ССI J
;
ССJ K
if
УУ 
(
УУ 
Results
УУ 
>
УУ 
$num
УУ 
)
УУ  
pms
ФФ 
.
ФФ 
Add
ФФ 
(
ФФ 
pm
ФФ 
)
ФФ 
;
ФФ  
}
ХХ 
var
ЧЧ 
	orderByPm
ЧЧ 
=
ЧЧ 
from
ЧЧ  
pm
ЧЧ! #
in
ЧЧ$ &
pms
ЧЧ' *
orderby
ШШ #
pm
ШШ$ &
.
ШШ& '
dateofCreation
ШШ' 5
select
ЩЩ "
pm
ЩЩ# %
;
ЩЩ% &
pms
ЫЫ 
=
ЫЫ 
	orderByPm
ЫЫ 
.
ЫЫ 
ToList
ЫЫ "
(
ЫЫ" #
)
ЫЫ# $
;
ЫЫ$ %
return
ЭЭ 
new
ЭЭ 

JsonResult
ЭЭ !
(
ЭЭ! "
pms
ЭЭ" %
)
ЭЭ% &
;
ЭЭ& '
}
ЮЮ 	
[
†† 	

HttpDelete
††	 
(
†† 
$str
†† $
)
††$ %
]
††% &
public
°° 

JsonResult
°° 
DeletePmAdmin
°° '
(
°°' (
int
°°( +
id
°°, .
)
°°. /
{
ҐҐ 	
var
££ 
pm
££ 
=
££ 
_context
££ 
.
££  
PlannedMaintenance
££ 0
.
££0 1
Find
££1 5
(
££5 6
id
££6 8
)
££8 9
;
££9 :
if
•• 
(
•• 
pm
•• 
==
•• 
null
•• 
)
•• 
{
¶¶ 
return
ІІ 
new
ІІ 

JsonResult
ІІ %
(
ІІ% &
NotFound
ІІ& .
(
ІІ. /
)
ІІ/ 0
)
ІІ0 1
;
ІІ1 2
}
®® 
_context
™™ 
.
™™  
PlannedMaintenance
™™ '
.
™™' (
Remove
™™( .
(
™™. /
pm
™™/ 1
)
™™1 2
;
™™2 3
_context
ђђ 
.
ђђ 
SaveChanges
ђђ  
(
ђђ  !
)
ђђ! "
;
ђђ" #
return
ЃЃ 
new
ЃЃ 

JsonResult
ЃЃ !
(
ЃЃ! "
Ok
ЃЃ" $
(
ЃЃ$ %
pm
ЃЃ% '
)
ЃЃ' (
)
ЃЃ( )
;
ЃЃ) *
}
ѓѓ 	
[
±± 	
HttpPost
±±	 
(
±± 
$str
±± 
)
±± 
]
±± 
public
≤≤ 

JsonResult
≤≤ 
CreatePm
≤≤ "
(
≤≤" #
string
≤≤# )
AffectedSolutions
≤≤* ;
,
≤≤; <
string
≤≤= C
Text
≤≤D H
,
≤≤H I
DateTime
≤≤J R
s
≤≤S T
)
≤≤T U
{
≥≥ 	 
PlannedMaintenance
іі 
pm
іі  "
=
іі# $
new
іі% ( 
PlannedMaintenance
іі) ;
(
іі; <
AffectedSolutions
іі< M
,
ііM N
Text
ііO S
,
ііS T
s
ііU V
)
ііV W
;
ііW X#
CreateEditMaintenance
µµ !
(
µµ! "
pm
µµ" $
)
µµ$ %
;
µµ% &
return
ЈЈ 
new
ЈЈ 

JsonResult
ЈЈ !
(
ЈЈ! "
pm
ЈЈ" $
)
ЈЈ$ %
;
ЈЈ% &
}
ЄЄ 	
[
ЉЉ 	
HttpGet
ЉЉ	 
(
ЉЉ 
$str
ЉЉ (
)
ЉЉ( )
]
ЉЉ) *
public
љљ 

JsonResult
љљ "
GetHistoricalPmAdmin
љљ .
(
љљ. /
)
љљ/ 0
{
ЊЊ 	
List
њњ 
<
њњ  
PlannedMaintenance
њњ #
>
њњ# $
pms
њњ% (
=
њњ) *
new
њњ+ .
List
њњ/ 3
<
њњ3 4 
PlannedMaintenance
њњ4 F
>
њњF G
(
њњG H
)
њњH I
;
њњI J
foreach
ЅЅ 
(
ЅЅ 
var
ЅЅ 
pm
ЅЅ 
in
ЅЅ 
_context
ЅЅ '
.
ЅЅ' ( 
PlannedMaintenance
ЅЅ( :
)
ЅЅ: ;
{
¬¬ 
int
√√ 
Results
√√ 
=
√√ 
DateTime
√√ &
.
√√& '
Compare
√√' .
(
√√. /
pm
√√/ 1
.
√√1 2
	scheduled
√√2 ;
,
√√; <
DateTime
√√= E
.
√√E F
Now
√√F I
)
√√I J
;
√√J K
if
≈≈ 
(
≈≈ 
Results
≈≈ 
<
≈≈ 
$num
≈≈ 
)
≈≈  
pms
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
pm
∆∆ 
)
∆∆ 
;
∆∆  
}
«« 
var
…… 
	orderByPm
…… 
=
…… 
from
……  
pm
……! #
in
……$ &
pms
……' *
orderby
   #
pm
  $ &
.
  & '
dateofCreation
  ' 5

descending
  6 @
select
ЋЋ "
pm
ЋЋ# %
;
ЋЋ% &
pms
ЌЌ 
=
ЌЌ 
	orderByPm
ЌЌ 
.
ЌЌ 
ToList
ЌЌ "
(
ЌЌ" #
)
ЌЌ# $
;
ЌЌ$ %
return
ѕѕ 
new
ѕѕ 

JsonResult
ѕѕ !
(
ѕѕ! "
pms
ѕѕ" %
)
ѕѕ% &
;
ѕѕ& '
}
–– 	
[
”” 	
HttpGet
””	 
(
”” 
$str
”” !
)
””! "
]
””" #
public
‘‘ 

JsonResult
‘‘ 
GetChartIssue
‘‘ '
(
‘‘' (
)
‘‘( )
{
’’ 	
int
„„ 
[
„„ 
]
„„ 
tab
„„ 
=
„„ 
{
„„ 
$num
„„ 
,
„„ 
$num
„„ 
,
„„ 
$num
„„  !
,
„„! "
$num
„„# $
}
„„% &
;
„„& '
foreach
ЎЎ 
(
ЎЎ 
var
ЎЎ 
issue
ЎЎ 
in
ЎЎ !
_context
ЎЎ" *
.
ЎЎ* +
Issues
ЎЎ+ 1
)
ЎЎ1 2
{
ўў 
if
ЏЏ 
(
ЏЏ 
DateTime
ЏЏ 
.
ЏЏ 
Compare
ЏЏ $
(
ЏЏ$ %
issue
ЏЏ% *
.
ЏЏ* +
ETA
ЏЏ+ .
,
ЏЏ. /
DateTime
ЏЏ0 8
.
ЏЏ8 9
Today
ЏЏ9 >
.
ЏЏ> ?
AddDays
ЏЏ? F
(
ЏЏF G
$num
ЏЏG H
)
ЏЏH I
)
ЏЏI J
<=
ЏЏK M
$num
ЏЏN O
)
ЏЏO P
tab
џџ 
[
џџ 
$num
џџ 
]
џџ 
++
џџ 
;
џџ 
else
№№ 
if
№№ 
(
№№ 
DateTime
№№ !
.
№№! "
Compare
№№" )
(
№№) *
issue
№№* /
.
№№/ 0
ETA
№№0 3
,
№№3 4
DateTime
№№5 =
.
№№= >
Today
№№> C
.
№№C D
AddDays
№№D K
(
№№K L
$num
№№L M
)
№№M N
)
№№N O
<=
№№P R
$num
№№S T
)
№№T U
tab
ЁЁ 
[
ЁЁ 
$num
ЁЁ 
]
ЁЁ 
++
ЁЁ 
;
ЁЁ 
else
ёё 
if
ёё 
(
ёё 
DateTime
ёё !
.
ёё! "
Compare
ёё" )
(
ёё) *
issue
ёё* /
.
ёё/ 0
ETA
ёё0 3
,
ёё3 4
DateTime
ёё5 =
.
ёё= >
Today
ёё> C
.
ёёC D
AddDays
ёёD K
(
ёёK L
$num
ёёL N
)
ёёN O
)
ёёO P
<=
ёёQ S
$num
ёёT U
)
ёёU V
tab
яя 
[
яя 
$num
яя 
]
яя 
++
яя 
;
яя 
else
аа 
if
аа 
(
аа 
DateTime
аа !
.
аа! "
Compare
аа" )
(
аа) *
issue
аа* /
.
аа/ 0
ETA
аа0 3
,
аа3 4
DateTime
аа5 =
.
аа= >
Today
аа> C
.
ааC D
AddDays
ааD K
(
ааK L
$num
ааL N
)
ааN O
)
ааO P
>
ааQ R
$num
ааS T
)
ааT U
tab
бб 
[
бб 
$num
бб 
]
бб 
++
бб 
;
бб 
}
вв 
return
дд 
new
дд 

JsonResult
дд !
(
дд! "
tab
дд" %
)
дд% &
;
дд& '
}
ее 	
[
зз 	
HttpGet
зз	 
(
зз 
$str
зз 
)
зз 
]
зз  
public
ии 

JsonResult
ии 

GetChartPm
ии $
(
ии$ %
)
ии% &
{
йй 	
int
кк 
[
кк 
]
кк 
tab
кк 
=
кк 
{
кк 
$num
кк 
,
кк 
$num
кк 
,
кк 
$num
кк  !
,
кк! "
$num
кк# $
}
кк% &
;
кк& '
foreach
лл 
(
лл 
var
лл 
pm
лл 
in
лл 
_context
лл &
.
лл& ' 
PlannedMaintenance
лл' 9
)
лл9 :
{
мм 
if
нн 
(
нн 
DateTime
нн 
.
нн 
Compare
нн $
(
нн$ %
pm
нн% '
.
нн' (
	scheduled
нн( 1
,
нн1 2
DateTime
нн3 ;
.
нн; <
Today
нн< A
.
ннA B
AddDays
ннB I
(
ннI J
$num
ннJ K
)
ннK L
)
ннL M
<=
ннN P
$num
ннQ R
)
ннR S
tab
оо 
[
оо 
$num
оо 
]
оо 
++
оо 
;
оо 
else
пп 
if
пп 
(
пп 
DateTime
пп !
.
пп! "
Compare
пп" )
(
пп) *
pm
пп* ,
.
пп, -
	scheduled
пп- 6
,
пп6 7
DateTime
пп8 @
.
пп@ A
Today
ппA F
.
ппF G
AddDays
ппG N
(
ппN O
$num
ппO P
)
ппP Q
)
ппQ R
<=
ппS U
$num
ппV W
)
ппW X
tab
рр 
[
рр 
$num
рр 
]
рр 
++
рр 
;
рр 
else
сс 
if
сс 
(
сс 
DateTime
сс !
.
сс! "
Compare
сс" )
(
сс) *
pm
сс* ,
.
сс, -
	scheduled
сс- 6
,
сс6 7
DateTime
сс8 @
.
сс@ A
Today
ссA F
.
ссF G
AddDays
ссG N
(
ссN O
$num
ссO Q
)
ссQ R
)
ссR S
<=
ссT V
$num
ссW X
)
ссX Y
tab
тт 
[
тт 
$num
тт 
]
тт 
++
тт 
;
тт 
else
уу 
if
уу 
(
уу 
DateTime
уу !
.
уу! "
Compare
уу" )
(
уу) *
pm
уу* ,
.
уу, -
	scheduled
уу- 6
,
уу6 7
DateTime
уу8 @
.
уу@ A
Today
ууA F
.
ууF G
AddDays
ууG N
(
ууN O
$num
ууO Q
)
ууQ R
)
ууR S
>
ууT U
$num
ууV W
)
ууW X
tab
фф 
[
фф 
$num
фф 
]
фф 
++
фф 
;
фф 
}
хх 
return
чч 
new
чч 

JsonResult
чч !
(
чч! "
tab
чч" %
)
чч% &
;
чч& '
}
шш 	
}
ээ 
}юю Л
>C:\Users\lbo\source\repos\LogosAPI\LogosAPI\Data\ApiContext.cs
	namespace 	
LogosAPI
 
. 
Data 
{ 
public 
class 

ApiContext 
:  !
	DbContext" +
{ 	
public		 
DbSet		 
<		 
Issues		 
>		  
Issues		! '
{		( )
get		* -
;		- .
set		/ 2
;		2 3
}		4 5
public

 
DbSet

 
<

 
PlannedMaintenance

 +
>

+ ,
PlannedMaintenance

- ?
{

@ A
get

B E
;

E F
set

G J
;

J K
}

L M
public 
DbSet 
< 
User 
> 
Users $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

ApiContext 
( 
DbContextOptions .
<. /

ApiContext/ 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{ 
} 
	protected 
override 
void #
OnModelCreating$ 3
(3 4
ModelBuilder4 @
builderA H
)H I
{ 
} 
} 	
}  
<C:\Users\lbo\source\repos\LogosAPI\LogosAPI\Models\Issues.cs
	namespace 	
LogosAPI
 
. 
Models 
{ 
public 

class 
Issues 
{ 
public 
int 
id 
{ 
get 
; 
set  
;  !
}" #
public		 
DateTime		 
Date		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public 
string 
AffectedSolutions '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
Text 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
ETA 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
? 
Solving  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
Closing  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
JsonConstructor	 
] 
public 
Issues 
( 
) 
{ 
} 
public 
Issues 
( 
string 
a 
, 
string %
t& '
,' (
DateTime) 1
eta2 5
)5 6
{ 	
this 
. 
id 
= 
$num 
; 
this 
. 
Date 
= 
DateTime  
.  !
Now! $
;$ %
this 
. 
AffectedSolutions "
=# $
a% &
;& '
this 
. 
Text 
= 
t 
; 
this 
. 
ETA 
= 
eta 
; 
this   
.   
Solving   
=   
null   
;    
this!! 
.!! 
Closing!! 
=!! 
null!! 
;!!  
}"" 	
}## 
}$$ В
HC:\Users\lbo\source\repos\LogosAPI\LogosAPI\Models\PlannedMaintenance.cs
	namespace 	
LogosAPI
 
. 
Models 
{ 
public 

class 
PlannedMaintenance #
{ 
public 
int 
id 
{ 
get 
; 
set 
;  
}! "
public		 
DateTime		 
dateofCreation		 &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
public 
DateTime 
	scheduled !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
affectedSolutions '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
text 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
JsonConstructor	 
] 
public 
PlannedMaintenance !
(! "
)" #
{$ %
}& '
public 
PlannedMaintenance !
(! "
string" (
a) *
,* +
string, 2
t3 4
,4 5
DateTime6 >
	scheduled? H
)H I
{ 	
this 
. 
id 
= 
$num 
; 
this 
. 
dateofCreation 
=  !
DateTime" *
.* +
Now+ .
;. /
this 
. 
affectedSolutions "
=# $
a% &
;& '
this 
. 
text 
= 
t 
; 
this 
. 
	scheduled 
= 
	scheduled &
;& '
} 	
} 
} ц
:C:\Users\lbo\source\repos\LogosAPI\LogosAPI\Models\User.cs
	namespace 	
LogosAPI
 
. 
Models 
{ 
public 

class 
User 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=/ 0
string1 7
.7 8
Empty8 =
;= >
public		 
byte		 
[		 
]		 
PasswordHash		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public

 
byte

 
[

 
]

 
PasswordSalt

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
} 
} б
=C:\Users\lbo\source\repos\LogosAPI\LogosAPI\Models\UserDto.cs
	namespace 	
LogosAPI
 
. 
Models 
{ 
public 

class 
UserDto 
{ 
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
} 
} Х 
6C:\Users\lbo\source\repos\LogosAPI\LogosAPI\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddDbContext 
< 

ApiContext (
>( )
() *
opt* -
=>. 0
opt1 4
.4 5
UseInMemoryDatabase5 H
(H I
$strI [
)[ \
)\ ]
;] ^
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddAuthentication "
(" #
JwtBearerDefaults# 4
.4 5 
AuthenticationScheme5 I
)I J
. 
AddJwtBearer 
( 
options 
=> 
{ 
options 
. %
TokenValidationParameters )
=* +
new, /%
TokenValidationParameters0 I
{ 	$
ValidateIssuerSigningKey $
=% &
true' +
,+ ,
IssuerSigningKey 
= 
new " 
SymmetricSecurityKey# 7
(7 8
Encoding8 @
.@ A
UTF8A E
.E F
GetBytesF N
(N O
builderO V
.V W
ConfigurationW d
.d e

GetSectione o
(o p
$str	p Г
)
Г Д
.
Д Е
Value
Е К
)
К Л
)
Л М
,
М Н
ValidateIssuer 
= 
false "
," #
ValidateAudience 
= 
false $
,$ %
} 	
;	 

} 
) 
; 
var 
cors 
=	 

$str 
; 
builder 
. 
Services 
. 
AddCors 
( 
opt 
=> 
{ 
opt   
.   
	AddPolicy   
(   
cors   
,   
builder   
=>    "
{!! 
builder"" 
."" 
AllowAnyMethod"" 
("" 
)""  
.""  !
AllowAnyHeader""! /
(""/ 0
)""0 1
;""1 2
}## 
)## 
;## 
}$$ 
)$$ 
;$$ 
var&& 
app&& 
=&& 	
builder&&
 
.&& 
Build&& 
(&& 
)&& 
;&& 
if)) 
()) 
app)) 
.)) 
Environment)) 
.)) 
IsDevelopment)) !
())! "
)))" #
)))# $
{** 
app++ 
.++ 

UseSwagger++ 
(++ 
)++ 
;++ 
app,, 
.,, 
UseSwaggerUI,, 
(,, 
),, 
;,, 
}-- 
app// 
.// 
UseHttpsRedirection// 
(// 
)// 
;// 
app11 
.11 
UseCors11 
(11 
cors11 
)11 
;11 
app33 
.33 
UseAuthentication33 
(33 
)33 
;33 
app55 
.55 
UseAuthorization55 
(55 
)55 
;55 
app77 
.77 
MapControllers77 
(77 
)77 
;77 
app99 
.99 
Run99 
(99 
)99 	
;99	 
